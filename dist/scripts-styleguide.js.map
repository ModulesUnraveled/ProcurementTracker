{"version":3,"sources":["02-molecules/menus/main-menu/main-menu.js","02-molecules/menus/tabs/tabs.js"],"names":["toggle_expand","document","getElementById","menu","expand_menu","getElementsByClassName","addEventListener","e","classList","toggle","i","length","menu_item","currentTarget","sub_menu","nextElementSibling","el","querySelectorAll","tabNavigationLinks","tabContentContainers","activeIndex","handleClick","link","index","preventDefault","goToTab","remove","add"],"mappings":";;AAAA;;;;;;AAMA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,CAAC,YAAY;AAAE;;AAEb;;AAEA;;AACA,MAAIA,gBAAgBC,SAASC,cAAT,CAAwB,eAAxB,CAApB;AACA,MAAIC,OAAOF,SAASC,cAAT,CAAwB,UAAxB,CAAX;AACA,MAAIE,cAAcD,KAAKE,sBAAL,CAA4B,YAA5B,CAAlB;;AAEA;AACAL,gBAAcM,gBAAd,CAA+B,OAA/B,EAAwC,UAAUC,CAAV,EAAa;AACnDP,kBAAcQ,SAAd,CAAwBC,MAAxB,CAA+B,qBAA/B;AACAN,SAAKK,SAAL,CAAeC,MAAf,CAAsB,gBAAtB;AACD,GAHD;;AAKA;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,YAAYO,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3CN,gBAAYM,CAAZ,EAAeJ,gBAAf,CAAgC,OAAhC,EAAyC,UAAUC,CAAV,EAAa;AACpD,UAAIK,YAAYL,EAAEM,aAAlB;AACA,UAAIC,WAAWF,UAAUG,kBAAzB;;AAEAH,gBAAUJ,SAAV,CAAoBC,MAApB,CAA2B,kBAA3B;AACAK,eAASN,SAAT,CAAmBC,MAAnB,CAA0B,qBAA1B;AACD,KAND;AAOD;AAEF,CA1BD,I,CA0BM;;AAEN;;;AC7CA,CAAC,YAAY;;AAEX;;AAEA,MAAIO,KAAKf,SAASgB,gBAAT,CAA0B,OAA1B,CAAT;AACA,MAAIC,qBAAqBjB,SAASgB,gBAAT,CAA0B,aAA1B,CAAzB;AACA,MAAIE,uBAAuBlB,SAASgB,gBAAT,CAA0B,YAA1B,CAA3B;AACA,MAAIG,cAAc,CAAlB;;AAEA;;;;;;;AAOA,MAAIC,cAAc,SAAdA,WAAc,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACvCD,SAAKhB,gBAAL,CAAsB,OAAtB,EAA+B,UAAUC,CAAV,EAAa;AAC1CA,QAAEiB,cAAF;AACAC,cAAQF,KAAR;AACD,KAHD;AAID,GALD;;AAOA;;;;;AAKA,MAAIE,UAAU,SAAVA,OAAU,CAAUF,KAAV,EAAiB;AAC7B,QAAIA,UAAUH,WAAV,IAAyBG,SAAS,CAAlC,IAAuCA,SAASL,mBAAmBP,MAAvE,EAA+E;AAC7EO,yBAAmBE,WAAnB,EAAgCZ,SAAhC,CAA0CkB,MAA1C,CAAiD,WAAjD;AACAR,yBAAmBK,KAAnB,EAA0Bf,SAA1B,CAAoCmB,GAApC,CAAwC,WAAxC;AACAR,2BAAqBC,WAArB,EAAkCZ,SAAlC,CAA4CkB,MAA5C,CAAmD,WAAnD;AACAP,2BAAqBI,KAArB,EAA4Bf,SAA5B,CAAsCmB,GAAtC,CAA0C,WAA1C;AACAP,oBAAcG,KAAd;AACD;AACF,GARD;;AAUA;;;;;;AAMA,OAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAIS,GAAGL,MAAvB,EAA+BJ,GAA/B,EAAoC;AAClCS,OAAGT,CAAH,EAAMC,SAAN,CAAgBkB,MAAhB,CAAuB,OAAvB;AACD;;AAED,OAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAIQ,mBAAmBP,MAAvC,EAA+CD,GAA/C,EAAoD;AAClD,QAAIY,OAAOJ,mBAAmBR,CAAnB,CAAX;AACAW,gBAAYC,IAAZ,EAAkBZ,CAAlB;AACD;AAEF,CArDD","file":"scripts-styleguide.js","sourcesContent":["/**\n * @file\n * A JavaScript file containing the main menu functionality (small/large screen)\n *\n */\n\n// JavaScript should be made compatible with libraries other than jQuery by\n// wrapping it with an \"anonymous closure\". See:\n// - https://drupal.org/node/1446420\n// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth\n\n\n// (function (Drupal) { // UNCOMMENT IF DRUPAL.\n//\n//   Drupal.behaviors.mainMenu = {\n//     attach: function (context) {\n\n(function () { // REMOVE IF DRUPAL.\n\n  'use strict';\n\n  // Use context instead of document IF DRUPAL.\n  var toggle_expand = document.getElementById('toggle-expand');\n  var menu = document.getElementById('main-nav');\n  var expand_menu = menu.getElementsByClassName('expand-sub');\n\n  // Mobile Menu Show/Hide.\n  toggle_expand.addEventListener('click', function (e) {\n    toggle_expand.classList.toggle('toggle-expand--open');\n    menu.classList.toggle('main-nav--open');\n  });\n\n  // Expose mobile sub menu on click.\n  for (var i = 0; i < expand_menu.length; i++) {\n    expand_menu[i].addEventListener('click', function (e) {\n      var menu_item = e.currentTarget;\n      var sub_menu = menu_item.nextElementSibling;\n\n      menu_item.classList.toggle('expand-sub--open');\n      sub_menu.classList.toggle('main-menu--sub-open');\n    });\n  }\n\n})(); // REMOVE IF DRUPAL.\n\n// })(Drupal); // UNCOMMENT IF DRUPAL.\n","(function () {\n\n  'use strict';\n\n  var el = document.querySelectorAll('.tabs');\n  var tabNavigationLinks = document.querySelectorAll('.tabs__link');\n  var tabContentContainers = document.querySelectorAll('.tabs__tab');\n  var activeIndex = 0;\n\n  /**\n   * handleClick\n   * @description Handles click event listeners on each of the links in the\n   *   tab navigation. Returns nothing.\n   * @param {HTMLElement} link The link to listen for events on\n   * @param {Number} index The index of that link\n   */\n  var handleClick = function (link, index) {\n    link.addEventListener('click', function (e) {\n      e.preventDefault();\n      goToTab(index);\n    });\n  };\n\n  /**\n   * goToTab\n   * @description Goes to a specific tab based on index. Returns nothing.\n   * @param {Number} index The index of the tab to go to\n   */\n  var goToTab = function (index) {\n    if (index !== activeIndex && index >= 0 && index <= tabNavigationLinks.length) {\n      tabNavigationLinks[activeIndex].classList.remove('is-active');\n      tabNavigationLinks[index].classList.add('is-active');\n      tabContentContainers[activeIndex].classList.remove('is-active');\n      tabContentContainers[index].classList.add('is-active');\n      activeIndex = index;\n    }\n  };\n\n  /**\n   * init\n   * @description Initializes the component by removing the no-js class from\n   *   the component, and attaching event listeners to each of the nav items.\n   *   Returns nothing.\n   */\n  for (var e = 0; e < el.length; e++) {\n    el[e].classList.remove('no-js');\n  }\n\n  for (var i = 0; i < tabNavigationLinks.length; i++) {\n    var link = tabNavigationLinks[i];\n    handleClick(link, i);\n  }\n\n})();\n"]}